JS
    JavaScript was introduced in 1995 as a way to add programs to web pages in the
    Netscape Navigator browser. The language has since been adopted by all other
    major graphical web browsers. It has made modern web applications possibleâ€”
    applications with which you can interact directly without doing a page reload
    for every action. JavaScript is also used in more traditional websites to provide
    various forms of interactivity and cleverness.

# Events

    Event	            Description
    onchange	        An HTML element has been changed
    onclick	            The user clicks an HTML element
    onmouseover	        The user moves the mouse over an HTML element
    onmouseout	        The user moves the mouse away from an HTML element
    onkeydown	        The user pushes a keyboard key
    onload	            The browser has finished loading the page
    DOMContentLoaded	The browser has finished loading the pages

    Events --> Actions 


    # Inline Events 

        Ex. 
         <button class="clickBtn" onclick="console.log('Just Got Clicked')">Click</button>


    # addEventListener 
        var.addEventListener("click", function (e) {
            // Functions Code Goes here
         });

         or 
         function functionName(e) {
            // Functions Code Goes here
         }

         attach the function to the event by

         var.addEventListener("click), functionName;


        Ex.
        const onbtn = document.getElementById("clickBtn");

        onbtn.addEventListener("click", function (e) {
        console.log("Clicked");

        if (onbtn.classList.contains("red")) {
            onbtn.classList.remove("red");
        } else {
            onbtn.classList.add("red");
        }
        });

        Or using functions 

        function handleClick(e) {
            console.log("Clicked");
            onbtn.innerHTML = "Clicked";

            if (onbtn.classList.contains("red")) {
                onbtn.classList.remove("red");
                onbtn.innerHTML = "Click";
            } else {
                onbtn.classList.add("red");
            }
        }

        onbtn.addEventListener("click", handleClick);



    # Event Object 

    var.addEventListener("click" , function(e) {}):

        e -> is the event object 

                Stores data in the event object 
                to use within the function
                    Ex.
                      console.log(e);


    # Standard vs Arrow 
        Standard:
          onbtn.addEventListener("click", function(e){
                console.log(this);
            });

        Arrow:
            onbtn.addEventListener("click", (e) => {
                console.log(this);
            });

                The whole global window object is logged

# querySelector 

    The querySelector() method returns the first element that matches a CSS selector.
    To return all matches (not only the first), use the querySelectorAll() instead.
    Both querySelector() and querySelectorAll() 
        Note 
            throw a SYNTAX_ERR exception if the selector(s) is invalid.


        # QuerySelector Methods:
            The querySelector() Method
                Selects the First element
                    ".class", "#id", "h1-h4"(elements)

            The querySelectorAll() Method (selects everything)

      

# DOM Manipulation 

    Are Objects and the programming interface is the method 
    and property of each object.
        Method: action to be done 
            Ex. add, or delete elements 
        property: value to set or get 
            Ex. like changing the content of an html element 

        Ex 
        getElementById is a method, 
        while innerHTML is a property.

        For Html:
            <p id="demo"></p>
        For Js: 
            document.getElementById("demo").innerHTML = "Hello, world!";

    # Finding HTML Elements , 
                The getElementById() Method

                The getElementsByTagName() Method

                The getElementsByClassName() Method
                
    # Changing HTML Elements , 
    # Adding and Deleting Elements,
    # Adding Events Handlers,
    # Finding HTML Objects
       
        https://www.w3schools.com/js/js_htmldom_document.asp



# Day 2 (Two)

# Fundamentals of JavaScript
    # Variables 
        let name = ....; and you can reassign the value
        const name = ....; cant use it again
        var name = ....; old not used 

    # Function 

        function example(parameters) {

        }

            > call the function 
        example(arg)

    # Array

        const arr = ['one', 'two', 'three']

        arr.push("new data')
        arr.pop();

    # Loops 
        arr.forEach( function (param) {

        });

    # Objects 
        Helps us group different values that are related together
        let obj = {
            title : "Title",
            dueDate : "03-03-2202"
        }
        obj.title -> "Title"
        object.dueDate -> "03-03-2202"

        or 

        obj['title']
            - This makes using variables possible 

                var = "title"
                obj[var] -> "Title"

        property-value pairs 

# Closures 
# DOM (Document Object Model)
# MVC Architecture