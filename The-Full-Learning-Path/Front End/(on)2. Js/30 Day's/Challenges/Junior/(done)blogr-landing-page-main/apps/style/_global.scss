// Reset
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  //   font-size: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
li,
ol[role="list"] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

html,
body {
  height: 100%;
}

/* Set core body defaults */
body {
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

// utilities

// General styles
body {
  // font-size: $fs-para;
  font-size: 1.125rem;
  font-family: $ff-ubuntu;
}

.max-width-wrapper {
  max-width: 800px;
  margin-inline: auto;
}

//  main
/* general styling */

:root {
  --beige: hsl(39, 52%, 90%);
  --green-500: hsl(167, 92%, 14%);
  --green-300: hsl(148, 100%, 34%);
  --radio: hsl(167, 92%, 14%);
}
main {
  max-width: 85em;
  margin-inline: auto;
  display: grid;
  align-items: start;
  gap: 2rem;
}

@media (min-width: 50em) {
  main {
    grid-template-columns: 1fr 12rem;
  }
}

aside {
  background: var(--beige);
}

.call-to-action {
  display: grid;
  gap: 1rem;
  background: var(--beige);
  padding: 2rem;
}

@media (min-width: 650px) {
  .call-to-action {
    grid-template-columns: 1fr min(10rem, 1fr);
  }

  .call-to-action > :not(.button) {
    grid-column: 1 / 2;
  }

  .call-to-action > .button {
    grid-row: 1 / 3;
    grid-column: 2 / 3;
    align-self: center;
    justify-self: end;
  }
}

.narrow,
.medium,
.wide {
  outline: 5px solid var(--beige);
  margin-inline: auto;
  width: min(var(--max-width, 650px), 100% - 2rem);
}

.narrow {
  --max-width: 300px;
}

.medium {
  --max-width: 550px;
}

.wide {
  --max-width: 950px;
}

* {
  box-sizing: border-box;
  margin: 0;
}

body {
  font-family: system-ui;
  font-size: 1.125rem;
  line-height: 1.6;
  padding: 0 2rem;
}

h1,
h2,
h3 {
  font-weight: 900;
  color: var(--green-500);
  line-height: 1.1;
}

.page-title {
  margin-block-end: 2em;
}

.flow > :where(:not(:first-child)) {
  margin-top: 1em;
}

.button {
  cursor: pointer;
  border: 0;
  text-decoration: none;
  background: transparent;
  padding: 0.75em 1.5em;
  border-radius: 100vw;
  background: var(--green-300);
  font-size: 1rem;
  text-transform: uppercase;
  font-weight: 700;
  color: var(--beige);
  line-height: 1;
}

.containers {
  margin-block: 4rem;
}

.visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  width: 1px;
}

fieldset {
  border: none;
  background-color: var(--beige);
  border-radius: 0 0 10px 10px;
  padding: 14px 24px;
  display: flex;
  align-items: center;
  gap: 14px;
  width: fit-content;
  margin-inline: auto;

  margin-bottom: 24px;
}

.color-picker input[type="radio"] {
  appearance: none;
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 5px;
  border: 2px solid var(--radio);
  cursor: pointer;
  transition: all 0.5s ease-in-out;

  &:hover {
    border-radius: 0 5px 0 5px;
    rotate: -45deg;
  }
}
.color-picker input[type="radio"]:checked {
  background-color: var(--radio);
  border-radius: 0 5px 0 5px;
  rotate: 315deg;
  border: none;
  outline: 2px solid teal;
  outline-offset: 1px;
}

// style for the radio button
.color-picker input[type="radio"]#light {
  --radio: var(var(--green-300));
}
.color-picker input[type="radio"]#red {
  --radio: red;
}
.color-picker input[type="radio"]#pink {
  --radio: deeppink;
}
.color-picker input[type="radio"]#blue {
  --radio: blue;
}

:root:has(#pink:checked) {
  --beige: hsl(295, 100%, 91%);
  --green-500: deeppink;
  --green-300: pink;
  --radio: hsl(167, 92%, 14%);
}
:root:has(#blue:checked) {
  --beige: hsl(204, 100%, 81%);
  --green-500: blue;
  --green-300: lightblue;
  --radio: hsl(167, 92%, 14%);
}
:root:has(#red:checked) {
  --beige: hsla(0, 100%, 85%, 0.515);
  --green-500: red;
  --green-300: tomato;
  --radio: hsl(167, 92%, 14%);
}
